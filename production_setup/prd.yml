version: '3.3'
services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-conf-volumes:/etc/nginx/conf.d
      - nginx-vhost-volumes:/etc/nginx/vhost.d
      - nginx-html-volumes:/usr/share/nginx/html
      - certs-volumes:/etc/nginx/certs:ro
    env_file: ./env/nginx_proxy.env

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx-conf-volumes:/etc/nginx/conf.d
      - nginx-vhost-volumes:/etc/nginx/vhost.d
      - nginx-html-volumes:/usr/share/nginx/html
      - certs-volumes:/etc/nginx/certs:rw

  nginx-frappe:
    image: nginx:1.12.2
    deploy:
      replicas: 1
    configs:
      - source: nginx-conf
        target: /etc/nginx/conf.d/nginx.temp
    env_file: ./env/frappe_nginx.env
    volumes:
      - frappe-sites-volumes:/home/frappe/bench/sites
      - frappe-apps-volumes:/home/frappe/bench/apps
    command: /bin/bash -c "envsubst '$$NGINX_SERVER_NAME' < /etc/nginx/conf.d/nginx.temp > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  mariadb:
    image: mariadb:10.2.12
    deploy:
      replicas: 1
    environment:
      - MYSQL_USER=root
      - MYSQL_ROOT_PASSWORD=123
    configs:
      - source: mariadb-conf
        target: /etc/mysql/conf.d/mariadb.cnf
      - source: mariadb-init-conf
        target: /home/init.sql
    volumes:
      - mariadb-data-volumes:/var/lib/mysql
    ports:
      - "3307:3306"

  redis-cache:
    image: redis:alpine
    deploy:
      replicas: 1
    configs:
      - source: redis-cache-conf
        target: /etc/conf.d/redis.conf
    command: ["redis-server","/etc/conf.d/redis.conf"]

  redis-queue:
    image: redis:alpine
    deploy:
      replicas: 1
    configs:
      - source: redis-queue-conf
        target: /etc/conf.d/redis.conf
    command: ["redis-server","/etc/conf.d/redis.conf"]

  redis-socketio:
    image: redis:alpine
    deploy:
      replicas: 1
    configs:
      - source: redis-socketio-conf
        target: /etc/conf.d/redis.conf
    command: ["redis-server","/etc/conf.d/redis.conf"]

  frappe:
    image: pipech/erpnext-docker-debian-production:stable
    deploy:
      replicas: 1
    ports:
      - "8000:8000"   #webserver_port
      - "9000:9000"   #socketio_port
      - "6787:6787"   #file_watcher_port
    configs:
      - source: frappe-init-conf
        target: /home/frappe/init.sh
    volumes:
      - frappe-sites-volumes:/home/frappe/bench/sites
      - frappe-apps-volumes:/home/frappe/bench/apps
      - frappe-logs-volumes:/home/frappe/bench/logs
    stdin_open: true
    tty: true
    env_file: ./env/frappe_app.env

volumes:
  frappe-sites-volumes:
  frappe-apps-volumes:
  frappe-logs-volumes:
  mariadb-data-volumes:
  nginx-conf-volumes:
  nginx-vhost-volumes:
  nginx-html-volumes:
  certs-volumes:

configs:
  mariadb-conf:
    file: ./conf/mariadb-conf/mariadb.cnf
  mariadb-init-conf:
    file: ./conf/mariadb-conf/init.sql
  nginx-conf:
    file: ./conf/nginx-conf/nginx.temp
  redis-cache-conf:
    file: ./conf/redis-conf/redis_cache.conf
  redis-queue-conf:
    file: ./conf/redis-conf/redis_queue.conf
  redis-socketio-conf:
    file: ./conf/redis-conf/redis_socketio.conf
  frappe-init-conf:
    file: ./conf/frappe-docker-conf/init.sh
